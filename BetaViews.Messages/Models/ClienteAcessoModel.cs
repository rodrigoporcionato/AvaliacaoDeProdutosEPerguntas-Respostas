//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BetaViews.Messages.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    public partial class ClienteAcessoModel
    {
    
        public int Id { get; set; }

        [Required]
        [Display(Name = "Cliente")]
        public int IdCliente { get; set; }

        [Required]
        [Display(Name = "Nome")]
        public string Nome { get; set; }

        [Display(Name = "E-mail (Este será seu login de acesso)")]        
        [Required(ErrorMessageResourceType = typeof(Resources), ErrorMessageResourceName = "Required")]
        [DataType(DataType.EmailAddress)]
        [RegularExpression("^[a-zA-Z0-9_\\.-]+@([a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$", ErrorMessage = "E-mail não é valido")]
        public string Email { get; set; }


        [Required]
        [Display(Name = "Senha")]
        public string Senha { get; set; }

        
        [Display(Name = "Departamento")]
        public string Departamento { get; set; }


        [Display(Name = "Dt do útimo acesso")]
        public DateTime? DtUltimoAcesso { get; set; }

        [Required]
        [Display(Name = "Status")]
        public bool FlagStatus { get; set; }

        [Required]
        [Display(Name = "Primeiro Acesso")]
        public bool PrimeiroAcesso { get; set; }

        [Required]
        [Display(Name = "Usuário Master")]
        public bool UsuarioMaster { get; set; }
    
        
        /// <summary>
        /// se nulo, então adiciona todas as lojas.
        /// </summary>
        [Display(Name = "Restringir usuário por lojas")]
        public int[] IdsClienteAcessoLoja { get; set; }
        
        //[Required]
        [Display(Name = "Permissão de acesso")]
        public int[] IdsClienteAcessoPerfil { get; set; }

        public virtual ClienteModel ClienteModel { get; set; }

        /// <summary>
        /// mostra apenas as paginas de acesso. não faz nada, bobo.
        /// </summary>
        public List<PaginaAcessoModel> PaginaAcesso { get; set; }

        //public ClienteAcessoModel MapperDBToModel(ClienteAcesso db,ClienteAcessoModel model) {

        //    var obj = new ClienteAcessoModel
        //    {
        //        Id = db.Id,
        //        Nome = db.Nome,
        //        Email = db.Email,
        //        Departamento = db.Departamento,
        //        DtUltimoAcesso = db.DtUltimoAcesso,
        //        FlagStatus = db.FlagStatus,
        //        IdCliente = db.IdCliente,
        //        PrimeiroAcesso = db.PrimeiroAcesso,
        //        Senha = db.Senha,
        //        UsuarioMaster = db.UsuarioMaster,
        //        PaginaAcesso = model.PaginaAcesso
        //    };          
        //    return obj;
        //}

        //public List<ClienteAcessoModel> MapperDBToModelToList(List<ClienteAcesso> db, ClienteAcessoModel model)
        //{
        //    var modelList = new List<ClienteAcessoModel>();

        //    db.ForEach(m => modelList.Add(MapperDBToModel(m, model)));

        //    return modelList;
        //}

    }



   

    


                                            

}
